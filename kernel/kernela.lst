     1                                  ;***************************************************************************
     2                                  ; 
     3                                  ;   kernel.asm-内核操作，但是无法用C语言描述的功能
     4                                  ;   Copyright (C) 2010 杨习辉
     5                                  ; **************************************************************************/
     6                                  
     7                                  extern sys_pgdir
     8                                  
     9                                  global reload_cr3
    10                                  global move_to_user
    11                                  global load_seg
    12                                  
    13                                  ;----------------------------------------------------------------
    14                                  ;public void reload_cr3(void)
    15                                  ;重新加载CR3，这样可以使CPU的TLB无效，然后CPU就要重新生成TLB中的内容了
    16                                  ;----------------------------------------------------------------
    17                                  reload_cr3:
    18 00000000 50                          push    eax
    19 00000001 B8[00000000]                mov     eax,sys_pgdir
    20 00000006 0F22D8                      mov     cr3,eax
    21 00000009 58                          pop     eax
    22 0000000A C3                          ret
    23                                  ;----------------------------------------------------------------
    24                                  ;public void load_seg(void)
    25                                  ;重新加载段寄存器，只给任务0使用
    26                                  ;----------------------------------------------------------------
    27                                  load_seg:
    28 0000000B 50                          push    eax
    29 0000000C B817000000                  mov     eax,0x17
    30 00000011 8ED8                        mov     ds,ax
    31 00000013 8EC0                        mov     es,ax
    32 00000015 8EE0                        mov     fs,ax
    33 00000017 8EE8                        mov     gs,ax
    34 00000019 58                          pop     eax
    35 0000001A C3                          ret
    36                                   ;----------------------------------------------------------------
    37                                  ;public void load_ldt(u16 ldt)
    38                                  ;重新加载段寄存器，只给任务0使用
    39                                  ;----------------------------------------------------------------
    40                                  load_ldt:
    41 0000001B 55                          push    ebp
    42 0000001C 89E5                        mov     ebp,esp
    43                                      
    44 0000001E 50                          push    eax
    45 0000001F 31C0                        xor     eax,eax
    46 00000021 668B4508                    mov     ax,[ebp + 8]
    47 00000025 0F00D0                      lldt    ax
    48                                      
    49 00000028 58                          pop     eax
    50 00000029 89EC                        mov     esp,ebp
    51 0000002B 5D                          pop     ebp
    52                                      
    53 0000002C C3                          ret
    54                                   ;----------------------------------------------------------------
    55                                  ;public void load_tr(u16 tss)
    56                                  ;重新加载段寄存器，只给任务0使用
    57                                  ;----------------------------------------------------------------
    58                                  load_tr:
    59 0000002D 55                          push    ebp
    60 0000002E 89E5                        mov     ebp,esp
    61                                      
    62 00000030 50                          push    eax
    63 00000031 31C0                        xor     eax,eax
    64 00000033 668B4508                    mov     ax,[ebp + 8]
    65 00000037 0F00D8                      ltr     ax
    66                                      
    67 0000003A 58                          pop     eax
    68 0000003B 89EC                        mov     esp,ebp
    69 0000003D 5D                          pop     ebp
    70                                      
    71 0000003E C3                          ret;   
